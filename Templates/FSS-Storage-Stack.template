AWSTemplateFormatVersion: 2010-09-09

Description: Trend Micro File Storage Security storage stack

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "[ Customizable section ]"
        Parameters:
          - S3BucketToScan
          - KMSKeyARNForBucketSSE
          - TriggerWithObjectCreatedEvent
      - Label:
          default: "[ Scanner stack ]"
        Parameters:
          - ScannerAWSAccount
          - ScannerSQSURL
          - KMSKeyARNForQueueSSE
      - Label:
          default: "[ Optional: resource prefixes ] Warning: Do not modify these fields when you update the stack. This may cause management problems. The maximum prefix length is 50 characters."
        Parameters:
          - IAMRolePrefix
          - IAMPolicyPrefix
          - S3BucketPrefix
          - LambdaFunctionPrefix
          - SNSTopicPrefix
      - Label:
          default: "[ Warning: Do not modify the fields below. Modifications may cause your deployment to fail. ]"
        Parameters:
          - FSSBucketName
          - FSSKeyPrefix
          - TrendMicroManagementAccount
          - CloudOneRegion
          - ExternalID

    ParameterLabels:
      S3BucketToScan:
        default: S3BucketToScan
      KMSKeyARNForBucketSSE:
        default: KMSKeyARNForBucketSSE
      TriggerWithObjectCreatedEvent:
        default: TriggerWithObjectCreatedEvent
      ScannerAWSAccount:
        default: ScannerAWSAccount
      ScannerSQSURL:
        default: ScannerSQSURL
      KMSKeyARNForQueueSSE:
        default: KMSKeyARNForQueueSSE
      FSSBucketName:
        default: Stack package location
      FSSKeyPrefix:
        default: Version
      TrendMicroManagementAccount:
        default: File Storage Security management account
      CloudOneRegion:
        default: Trend Micro Cloud One region
      ExternalID:
        default: ExternalID
      IAMRolePrefix:
        default: Prefix for IAM role name
      IAMPolicyPrefix:
        default: Prefix for IAM policy name
      S3BucketPrefix:
        default: Prefix for S3 bucket name
      LambdaFunctionPrefix:
        default: "Prefix for Lambda function name [ Warning: Do not modify this field when you update the stack. Modifications may cause your update to fail. ]"
      SNSTopicPrefix:
        default: Prefix for SNS topic name

Parameters:
  ScannerAWSAccount:
    Description: ""
    Type: List<Number>
  S3BucketToScan:
    AllowedPattern: ^[0-9a-z]+([0-9a-z-]*[0-9a-z])*$
    ConstraintDescription: S3 bucket name can include numbers, lowercase
      letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Description: The S3 bucket to scan. Specify an existing S3 bucket.
    Type: String
  KMSKeyARNForBucketSSE:
    Default: ''
    Description: The ARN for the KMS master key used to encrypt S3 bucket objects. Leave it blank if you haven't enabled SSE-KMS for the bucket.
    Type: String
  TriggerWithObjectCreatedEvent:
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: If the s3:ObjectCreated:* event of the S3BucketToScan is in use, set this option to false and trigger the scans by invoking the deployed BucketListenerLambda.
    Type: String
  ScannerSQSURL:
    Description: ""
    Type: String
  KMSKeyARNForQueueSSE:
    Default: ''
    Description: The ARN for the KMS master key used to encrypt messages in SQS. Leave it blank if you haven't used your own CMK for SQS server-side encryption.
    Type: String
  FSSBucketName:
    AllowedPattern: ^[0-9a-z]+([0-9a-z-]*[0-9a-z])*$
    ConstraintDescription:
      File Storage Security bucket name can include numbers, lowercase
      letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: file-storage-security
    Description: ""
    Type: String
  FSSKeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription:
      File Storage Security key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: latest/
    Description: ""
    Type: String
  CloudOneRegion:
    Description: The region of the Trend Micro Cloud One services. This region may be different from your stack's region.
    Type: String
    Default: us-east-1
    AllowedValues:
      - us-east-1
  TrendMicroManagementAccount:
    AllowedPattern: ^[0-9]*$
    ConstraintDescription: AWS account ID.
    Default: 415485722356
    Description: This account will be given permission to modify the stacks for upgrades and troubleshooting purposes.
    Type: String
  ExternalID:
    Description: "The External ID is for future use with updating Lambdas and also to address and prevent the 'confused deputy' problem."
    Type: String
  IAMRolePrefix:
    AllowedPattern: ^$|^[a-zA-Z0-9+=,.@\-_]+-$
    ConstraintDescription: Prefix for IAM role name can be empty or include alphanumeric and '+=,.@-_' characters and must end with a hyphen. The maximum length is 50 characters.
    Default: ''
    Description: Prefix for the name of the IAM roles being deployed. Must end with a hyphen (-).
    Type: String
    MaxLength: 50
  IAMPolicyPrefix:
    AllowedPattern: ^$|^[a-zA-Z0-9+=,.@\-_]+-$
    ConstraintDescription: Prefix for IAM policy name can be empty or include alphanumeric and '+=,.@-_' characters and must end with a hyphen. The maximum length is 50 characters.
    Default: ''
    Description: Prefix for the name of the IAM Policies. Must end with a hyphen (-).
    Type: String
    MaxLength: 50
  S3BucketPrefix:
    AllowedPattern: ^$|^[0-9a-z]+[0-9a-z\-]*-$
    ConstraintDescription: Prefix for S3 bucket name can be empty or include numbers, lowercase letters and hyphens (-) and must end with a hyphen. The maximum length is 50 characters.
    Default: ''
    Description: Prefix for the name of S3 buckets being deployed. Must end with a hyphen (-).
    Type: String
    MaxLength: 50
  LambdaFunctionPrefix:
    AllowedPattern: ^$|^[a-zA-Z0-9_\-]+-$
    ConstraintDescription: Prefix for Lambda function name can be empty or include letters, numbers, hyphens (-), and underscores (_) and must end with a hyphen. The maximum length is 50 characters.
    Default: ''
    Description: Prefix for the name of the Lambda functions being deployed. Must end with a hyphen (-).
    Type: String
    MaxLength: 50
  SNSTopicPrefix:
    AllowedPattern: ^$|^[a-zA-Z0-9_\-]+-$
    ConstraintDescription: Prefix for SNS topic name can be empty or include include alphanumeric characters, hyphens (-) and underscores (_) and must end with a hyphen. The maximum length is 50 characters.
    Default: ''
    Description: Prefix for the name of SNS topics being deployed. Must end with a hyphen (-).
    Type: String
    MaxLength: 50

Conditions:
  HasIAMRolePrefix:
    !Not [!Equals ['', !Ref IAMRolePrefix]]
  HasIAMPolicyPrefix:
    !Not [!Equals ['', !Ref IAMPolicyPrefix]]
  HasS3BucketPrefix:
    !Not [!Equals ['', !Ref S3BucketPrefix]]
  HasLambdaFunctionPrefix:
    !Not [!Equals ['', !Ref LambdaFunctionPrefix]]
  HasSNSTopicPrefix:
    !Not [!Equals ['', !Ref SNSTopicPrefix]]
  IsBucketSSEKMSEnabled:
    !Not [!Equals ['', !Ref KMSKeyARNForBucketSSE]]
  IsQueueSSEKMSEnabled:
    !Not [!Equals ['', !Ref KMSKeyARNForQueueSSE]]
  IsTriggeredWithObjectCreatedEvent:
    !Equals ['true', !Ref TriggerWithObjectCreatedEvent]

Resources:
  CopyZipsDestBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !If
        - HasS3BucketPrefix
        - !Join ['', [!Ref S3BucketPrefix, 'cp-', !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
        - !Ref AWS::NoValue
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  CopyZips:
    Type: Custom::CopyZips
    Properties:
      ServiceToken: !GetAtt CopyZipsLambda.Arn
      DestBucket: !Ref CopyZipsDestBucket
      SourceBucket: !Ref FSSBucketName
      Prefix: !Ref FSSKeyPrefix
      Objects:
        - lambda/bucket-listener.zip
        - lambda/post-scan-action-tag.zip
        - lambda/handle-scanningbucket-lambda-python.zip
  CopyZipsLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !If
        - HasLambdaFunctionPrefix
        - !Join ['', [!Ref LambdaFunctionPrefix, 'CP-', !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
        - !Ref AWS::NoValue
      Description: Copies objects from a source S3 bucket to a destination
      Handler: index.handler
      Runtime: python3.8
      Role: !GetAtt CopyZipsExecutionRole.Arn
      Timeout: 900
      Code:
        ZipFile: |
          import cfnresponse
          import boto3
          import traceback
          def copy_objects(source_bucket, dest_bucket, prefix, objects):
              s3 = boto3.client('s3')
              for o in objects:
                  key = prefix + o
                  copy_source = {'Bucket': source_bucket, 'Key': key}
                  print(f'copy_source: {copy_source}\ndest_bucket: {dest_bucket}\nkey: {key}')
                  s3.copy_object(CopySource=copy_source, Bucket=dest_bucket, Key=key, TaggingDirective='REPLACE')
          def delete_objects(bucket, prefix, objects):
              s3 = boto3.client('s3')
              objects = {'Objects': [{'Key': prefix + o} for o in objects]}
              s3.delete_objects(Bucket=bucket, Delete=objects)
          def handler(event, context):
              print(event)
              status = cfnresponse.SUCCESS
              try:
                  if event['RequestType'] == 'Delete':
                      delete_objects(event['ResourceProperties']['DestBucket'], event['ResourceProperties']['Prefix'],
                                    event['ResourceProperties']['Objects'])
                  else:
                      copy_objects(event['ResourceProperties']['SourceBucket'], event['ResourceProperties']['DestBucket'],
                                  event['ResourceProperties']['Prefix'], event['ResourceProperties']['Objects'])
              except Exception as ex:
                  print('Unhandled exception: '+ str(ex))
                  traceback.print_exc()
                  status = cfnresponse.FAILED
              finally:
                  cfnresponse.send(event, context, status, {}, None)
  CopyZipsExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !If
        - HasIAMRolePrefix
        - !Join ['', [!Ref IAMRolePrefix, 'CP-', !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
        - !Ref AWS::NoValue
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: lambda-copier
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:GetObject
                Resource: !Sub arn:${AWS::Partition}:s3:::${FSSBucketName}/${FSSKeyPrefix}*
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:DeleteObject
                Resource: !Sub arn:${AWS::Partition}:s3:::${CopyZipsDestBucket}/${FSSKeyPrefix}*

  ScanResultTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !If
        - HasSNSTopicPrefix
        - !Join ['', [!Ref SNSTopicPrefix, 'ScanResultTopic-', !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
        - !Ref AWS::NoValue
      DisplayName: S3 Scanning Results
      Subscription:
        - Endpoint: !GetAtt PostScanActionTagLambda.Arn
          Protocol: lambda
  ScanResultTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref ScanResultTopic
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sns:Publish
            Resource: !Ref ScanResultTopic
            Principal:
              AWS: !Ref ScannerAWSAccount

  BucketListenerLambda:
    Type: AWS::Lambda::Function
    DependsOn: CopyZips
    Properties:
      FunctionName: !If
        - HasLambdaFunctionPrefix
        - !Join ['', [!Ref LambdaFunctionPrefix, 'BL-', !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
        - !Ref AWS::NoValue
      Code:
        S3Bucket: !Ref CopyZipsDestBucket
        S3Key: !Sub ${FSSKeyPrefix}lambda/bucket-listener.zip
      Handler: handler.lambda_handler
      Environment:
        Variables:
          SQSUrl: !Ref ScannerSQSURL
          SNSArn: !Ref ScanResultTopic
          stackARN: !Ref AWS::StackId
      MemorySize: 128
      Role: !GetAtt BucketListenerExecutionRole.Arn
      Runtime: python3.8
      Timeout: 15
  BucketListenerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !If
        - HasIAMRolePrefix
        - !Join ['', [!Ref IAMRolePrefix, 'BL-', !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
        - !Ref AWS::NoValue
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObjectTagging
                Resource: !Sub arn:${AWS::Partition}:s3:::${S3BucketToScan}/*
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                Resource: !Join
                  - ':'
                  - - !Sub arn:${AWS::Partition}:sqs
                    # convert SQS URL (https://sqs.<REGION>.amazonaws.com/<ACCOUNT_ID>/<QUEUE_NAME>) to ARN
                    - !Select # region
                      - 1
                      - !Split
                        - .
                        - !Select [2, !Split [/, !Ref ScannerSQSURL]] # hostname sqs.<REGION>.amazonaws.com
                    - !Select [3, !Split [/, !Ref ScannerSQSURL]] # account ID
                    - !Select [4, !Split [/, !Ref ScannerSQSURL]] # queue name
  BucketListenerExecutionRoleKMSDecryptPolicy:
    Type: AWS::IAM::Policy
    Condition: IsBucketSSEKMSEnabled
    Properties:
      PolicyName: !If
        - HasIAMPolicyPrefix
        - !Join ['', [!Ref IAMPolicyPrefix, 'kms-permission']]
        - 'kms-permission'
      Roles:
        - !Ref BucketListenerExecutionRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource: !Ref KMSKeyARNForBucketSSE
  BucketListenerExecutionRoleKMSDecryptPolicyForSQS:
    Type: AWS::IAM::Policy
    Condition: IsQueueSSEKMSEnabled
    Properties:
      PolicyName: !If
        - HasIAMPolicyPrefix
        - !Join ['', [!Ref IAMPolicyPrefix, 'kms-permission-for-sqs']]
        - 'kms-permission-for-sqs'
      Roles:
        - !Ref BucketListenerExecutionRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:GenerateDataKey
              - kms:Decrypt
            Resource: !Ref KMSKeyARNForQueueSSE
  BucketListenerInvokePermissionOfScanningBucket:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt BucketListenerLambda.Arn
      Principal: s3.amazonaws.com
      SourceArn: !Sub arn:${AWS::Partition}:s3:::${S3BucketToScan}
  BucketListenerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join [/, [/aws/lambda, !Ref BucketListenerLambda]]
      RetentionInDays: 90

  PostScanActionTagLambda:
    Type: AWS::Lambda::Function
    DependsOn: CopyZips
    Properties:
      FunctionName: !If
        - HasLambdaFunctionPrefix
        - !Join ['', [!Ref LambdaFunctionPrefix, 'Tag-', !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
        - !Ref AWS::NoValue
      Code:
        S3Bucket: !Ref CopyZipsDestBucket
        S3Key: !Sub ${FSSKeyPrefix}lambda/post-scan-action-tag.zip
      Handler: handler.lambda_handler
      Environment:
        Variables:
          stackARN: !Ref AWS::StackId
      MemorySize: 128
      Role: !GetAtt PostScanActionTagExecutionRole.Arn
      Runtime: python3.8
      Timeout: 15
  PostScanActionTagExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !If
        - HasIAMRolePrefix
        - !Join ['', [!Ref IAMRolePrefix, 'Tag-', !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
        - !Ref AWS::NoValue
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectTagging
                  - s3:PutObjectTagging
                Resource: !Sub arn:${AWS::Partition}:s3:::${S3BucketToScan}/*
  PostScanActionTagInvokePermissionOfScanResultTopic:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt PostScanActionTagLambda.Arn
      Principal: sns.amazonaws.com
      SourceArn: !Ref ScanResultTopic
  PostScanActionTagLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join [/, [/aws/lambda, !Ref PostScanActionTagLambda]]
      RetentionInDays: 90

  ManagementRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !If
        - HasIAMRolePrefix
        - !Join ['', [!Ref IAMRolePrefix, 'Mgmt-', !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
        - !Ref AWS::NoValue
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref TrendMicroManagementAccount
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Ref ExternalID
      Policies:
        - PolicyName: stack-management
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:ListStackResources
                  - cloudformation:DescribeStacks
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStackResources
                  - cloudformation:DescribeStackResource
                  - cloudformation:DetectStackDrift
                  - cloudformation:DetectStackResourceDrift
                  - cloudformation:DescribeStackResourceDrifts
                  - cloudformation:GetStackPolicy
                  - cloudformation:GetTemplate
                Resource: !Ref AWS::StackId
        - PolicyName: lambda-management
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:UpdateFunctionCode
                  - lambda:UpdateFunctionConfiguration
                  - lambda:GetFunctionConfiguration
                  - lambda:PublishVersion
                  - lambda:ListVersionsByFunction
                  - lambda:CreateAlias
                  - lambda:UpdateAlias
                  - lambda:DeleteAlias
                  - lambda:ListAliases
                  - lambda:GetAlias
                  - lambda:GetFunction
                  - lambda:ListProvisionedConcurrencyConfigs
                  - lambda:GetProvisionedConcurrencyConfig
                  - lambda:GetFunctionConcurrency
                Resource:
                  - !GetAtt BucketListenerLambda.Arn
                  - !GetAtt PostScanActionTagLambda.Arn
        - PolicyName: lambda-logs-access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:DescribeLogStreams
                  - logs:GetLogEvents
                  - logs:StartQuery
                  - logs:StopQuery
                  - logs:GetQueryResults
                  - logs:FilterLogEvents
                Resource:
                  - !GetAtt BucketListenerLogGroup.Arn
                  - !GetAtt PostScanActionTagLogGroup.Arn
  ManagementRoleGetRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !If
        - HasIAMPolicyPrefix
        - !Join ['', [!Ref IAMPolicyPrefix, 'role-management']]
        - 'role-management'
      Roles:
        - !Ref ManagementRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - iam:GetRolePolicy
            Resource: !GetAtt ManagementRole.Arn

  SetupBucketNotification:
    Type: Custom::SetupBucketNotificationLambda
    Condition: IsTriggeredWithObjectCreatedEvent
    DependsOn: BucketListenerInvokePermissionOfScanningBucket
    Properties:
      ServiceToken: !GetAtt SetupBucketNotificationLambda.Arn
      Bucket: !Ref S3BucketToScan
  SetupBucketNotificationLambda:
    Type: AWS::Lambda::Function
    Condition: IsTriggeredWithObjectCreatedEvent
    DependsOn: CopyZips
    Properties:
      FunctionName: !If
        - HasLambdaFunctionPrefix
        - !Join ['', [!Ref LambdaFunctionPrefix, 'Setup-', !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
        - !Ref AWS::NoValue
      Environment:
        Variables:
          AWSRegion: !Ref AWS::Region
          LambdaArn: !GetAtt BucketListenerLambda.Arn
      Handler: lambdas.handle_scanningbucket.lambda_handler
      Role: !GetAtt SetupBucketNotificationExecutionRole.Arn
      Runtime: python3.8
      Timeout: 50
      Code:
        S3Bucket: !Ref CopyZipsDestBucket
        S3Key: !Sub ${FSSKeyPrefix}lambda/handle-scanningbucket-lambda-python.zip
  SetupBucketNotificationExecutionRole:
    Type: AWS::IAM::Role
    Condition: IsTriggeredWithObjectCreatedEvent
    Properties:
      RoleName: !If
        - HasIAMRolePrefix
        - !Join ['', [!Ref IAMRolePrefix, 'Setup-', !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
        - !Ref AWS::NoValue
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetBucketNotification
                  - s3:PutBucketNotification
                  - s3:ListBucket
                Resource: !Sub arn:${AWS::Partition}:s3:::*

Outputs:
  ScanningBucket:
    Value: !Ref S3BucketToScan
  BucketListenerRoleARN:
    Value: !GetAtt BucketListenerExecutionRole.Arn
  StorageStackManagementRoleARN:
    Value: !GetAtt ManagementRole.Arn
    Description: The ARN of the IAM role for File Storage Security backend services to manage the deployed resources.
  BucketListenerLambdaARN:
    Value: !GetAtt BucketListenerLambda.Arn
  PostScanActionTagLambdaARN:
    Value: !GetAtt PostScanActionTagLambda.Arn
  ScanResultTopicARN:
    Value: !Ref ScanResultTopic
